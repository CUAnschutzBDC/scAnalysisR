% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plotting.R
\name{stacked_barplots}
\alias{stacked_barplots}
\title{Create stacked barplot}
\usage{
stacked_barplots(
  seurat_object,
  meta_col,
  color = NULL,
  percent = TRUE,
  split_by = NULL,
  return_values = FALSE
)
}
\arguments{
\item{seurat_object}{A seurat object}

\item{meta_col}{What column to use to generate the barplot. For example, "cluster"
or "cell_type"}

\item{color}{OPTIONAL What colors should be used to color the stacked barplot.
Default is Set1 from RColorBrewer.}

\item{percent}{If the barplots should be constructed using the percent of cells in
each category (TRUE) or the count (FALSE). Default is TRUE.}

\item{split_by}{How the barplots should be split. Can be any discrete column from the
meta data. For example, "sample". If nothing is provided, only one barplot will be made.}

\item{return_values}{If the percents and counts should be returned. If TRUE, the return
from this object will be a data frame with counts and percents by the specified meta data
columns for meta_col and split_by. If FALSE the return will be a ggplot object of the
stacked barplots. Default is FALSE.}
}
\value{
Either a stacked barplot based on the count or percent of each meta data group
in your sample (if return_values = FALSE) or a data frame with the count and percent
values of each meta data group in your sample (if return_values = TRUE).
}
\description{
This function will create stacked barplots based on cells in each cluster. Barplots
can be separated by any meta data column, for example, sample or treatment or
hashtag
}
\examples{
\dontrun{
stacked_barplots(seurat_object = seurat_object,
                 meta_col      = "cluster")
stacked_barplots(seurat_object = seurat_object,
                 meta_col      = "cluster",
                 color         = c(1 = "#FFFFFF", 2 = "#FF0000"),
                 split_by      = "sample")
percent_df <- stacked_barplots(seurat_object = seurat_object,
                               meta_col      = "cluster",
                               return_values = TRUE)
}
}
