% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/differential_expression.R
\name{plot_hypergeom}
\alias{plot_hypergeom}
\title{Plots results of enrichment}
\usage{
plot_hypergeom(
  hypergeom_output,
  colors = NULL,
  meta_df = NULL,
  color_list = NULL,
  cluster_rows = FALSE,
  cluster_cols = FALSE,
  color_palette = NULL,
  breaks = FALSE,
  max_val = NULL
)
}
\arguments{
\item{hypergeom_output}{The output from running hypergeometric_test}

\item{colors}{OPTIONAL The colors to use to annotate the x axis. If left
blank and no meta_df and color list are provided, will default to Set 1
from RColorBrewer}

\item{meta_df}{OPTIONAL A dataframe with meta data to use to color the x axis
of the plot. If left blank, the cluster information will be used from the
hypergeometric test.}

\item{color_list}{OPTIONAL A list of color vectors to color the x axis. The names
of each element of the list much match the column names of the meta_df and the
length of these vectors must match the levels of each colunm of the meta_df. This
is used in conjunction with pheatmap, this tutorial can help explain how the meta_df
and color_list are used
https://davetang.org/muse/2018/05/15/making-a-heatmap-in-r-with-the-pheatmap-package/
must be included if meta_df is specified.}

\item{cluster_rows}{OPTIONAL if the heatmap rows should be clusterd. Default is FALSE}

\item{cluster_cols}{OPTIONAL if the heatmap columns should be clustered. Default is
FALSE.}

\item{color_palette}{OPTIONAL The color of the heatmap. Can be "blueRed" or your
own palette. If no colors are provided, will use the blueYellow palette from
the ArchR package.}

\item{breaks}{OPTIONAL How to adjust the color scale. Can use if the heatmap looks
washed out. Default is FALSE.}

\item{mak_val}{OPTIONAL where to cutoff the color scale. Default is no cutoff.}
}
\value{
A pheatmap object
}
\description{
This function takes the output of hypergeometric_test and creates
a heatmap based on the log of the adjusted p-values.
}
\examples{
\dontrun{
# This is better with longer gene lists, but this is just an example
my_genes <- list(t_cell = c("Cd3d", "Cd4", "Cd8"),
                 beta   = c("Ins1", "Ins2", "Nkx2-2"),
                 alpha  = c("Gcg", "Arx"))
DE_res <- FindMarkers(seurat_object, only.pos = TRUE)
enrichment <- hypergeometric_test(seurat_object = seurat_object,
                                  gene_list     = my_list,
                                  DE_table      = DE_res)
heatmap_out <- plot_hypergeom(enrichment)
}
}
